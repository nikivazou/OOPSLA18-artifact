(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun runFun () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$173 () Int)
(declare-fun cast_as_int () Int)
(declare-fun VV$35$$35$419 () Int)
(declare-fun lq_tmp$36$x$35$$35$175 () Int)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$VV$35$$35$292$35$$35$k_$35$$35$293 () Int)
(declare-fun lq_karg$36$VV$35$$35$234$35$$35$k_$35$$35$235 () Int)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$177 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811751$35$$35$d4IL$35$$35$k_$35$$35$232 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK$35$$35$k_$35$$35$173 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792811754$35$$35$d4IO () Int)
(declare-fun VV$35$$35$373 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$180 () Int)
(declare-fun lq_karg$36$VV$35$$35$179$35$$35$k_$35$$35$173 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ$35$$35$k_$35$$35$177 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ$35$$35$k_$35$$35$180 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$232 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$235 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$415 () Int)
(declare-fun lq_tmp$36$x$35$$35$258 () Int)
(declare-fun autolen () Int)
(declare-fun Round2.Cycle.$36$trModule () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811751$35$$35$d4IL$35$$35$k_$35$$35$235 () Int)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811756$35$$35$d4IQ () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$261 () Int)
(declare-fun VV$35$$35$391 () Int)
(declare-fun ds_d4Iz () Int)
(declare-fun lit$36$Round2.Cycle () Str)
(declare-fun lq_rnm$36$fldList$35$$35$55 () Int)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811752$35$$35$d4IM$35$$35$k_$35$$35$261 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ$35$$35$k_$35$$35$173 () Str)
(declare-fun lq_tmp$36$x$35$$35$230 () Int)
(declare-fun lit$36$main () Str)
(declare-fun fromJust () Int)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Str)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811753$35$$35$d4IN () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792811751$35$$35$d4IL () Int)
(declare-fun VV$35$$35$382 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$261 () Int)
(declare-fun lq_karg$36$VV$35$$35$176$35$$35$k_$35$$35$177 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$VV$35$$35$260$35$$35$k_$35$$35$261 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811751$35$$35$d4IL$35$$35$k_$35$$35$228 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_karg$36$VV$35$$35$172$35$$35$k_$35$$35$173 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II () Int)
(declare-fun lq_tmp$36$x$35$$35$257 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811752$35$$35$d4IM$35$$35$k_$35$$35$235 () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$235 () Int)
(declare-fun lq_rnm$36$fldList$35$$35$67 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$VV$35$$35$227$35$$35$k_$35$$35$228 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_tmp$36$x$35$$35$126 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811752$35$$35$d4IM$35$$35$k_$35$$35$232 () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$232 () Int)
(declare-fun lit$36$cycle () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$175$35$$35$k_$35$$35$177 () Int)
(declare-fun x () Str)
(declare-fun VV$35$$35$321 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$177 () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$VV$35$$35$234$35$$35$k_$35$$35$228 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$230$35$$35$k_$35$$35$232 () Int)
(declare-fun lq_tmp$36$x$35$$35$171 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$180 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$173 () Int)
(declare-fun lq_tmp$36$x$35$$35$127 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811752$35$$35$d4IM () Int)
(declare-fun lq_karg$36$VV$35$$35$179$35$$35$k_$35$$35$180 () Int)
(declare-fun xs$39$$35$$35$a4Is () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK$35$$35$k_$35$$35$177 () Str)
(declare-fun lq_karg$36$xs$39$$35$$35$a4Is$35$$35$k_$35$$35$261 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK$35$$35$k_$35$$35$180 () Str)
(declare-fun lq_karg$36$VV$35$$35$231$35$$35$k_$35$$35$232 () Int)
(declare-fun lq_karg$36$ds_d4Iz$35$$35$k_$35$$35$228 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811752$35$$35$d4IM$35$$35$k_$35$$35$228 () Int)
(declare-fun lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Cycle.hs$34$$32$$40$line$32$8$44$$32$column$32$41$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II$35$$35$k_$35$$35$228 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811751$35$$35$d4IL$35$$35$k_$35$$35$261 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811755$35$$35$d4IP () Str)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_tmp$36$x$35$$35$237 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$cycle lit$36$main lit$36$Round2.Cycle))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$Round2.Cycle) 12))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$cycle) 5))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ lit$36$cycle) (and (= VV$35$$35$F$35$$35$7 lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$7) (strLen lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ)) (<= 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$7) 0) (= VV$35$$35$F$35$$35$7 lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK) (<= 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$7) 0)) (and (> (apply$35$$35$0 (as len Int) ds_d4Iz) 0) (<= 0 (apply$35$$35$0 (as len Int) ds_d4Iz)) (>= (apply$35$$35$0 (as len Int) ds_d4Iz) 0)) (and (= lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK) (strLen lq_anf$36$$35$$35$7205759403792811749$35$$35$d4IJ)) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811750$35$$35$d4IK) 0)) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (= lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II ds_d4Iz) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0)) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (= lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II ds_d4Iz) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0)) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (= lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II ds_d4Iz) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (= lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792811748$35$$35$d4II) 0))))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
