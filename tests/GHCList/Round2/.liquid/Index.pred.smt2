(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$384 () Int)
(declare-fun runFun () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$VV$35$$35$344$35$$35$k_$35$$35$345 () Int)
(declare-fun VV$35$$35$466 () Int)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$345 () Int)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun lq_karg$36$ds_d4IY$35$$35$k_$35$$35$345 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811777$35$$35$d4Jb$35$$35$k_$35$$35$345 () Int)
(declare-fun VV$35$$35$474 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811782$35$$35$d4Jg () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811780$35$$35$d4Je () Str)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$VV$35$$35$387$35$$35$k_$35$$35$388 () Int)
(declare-fun lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$247 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4$35$$35$k_$35$$35$247 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811773$35$$35$d4J7$35$$35$k_$35$$35$247 () Str)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811772$35$$35$d4J6$35$$35$k_$35$$35$247 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5$35$$35$k_$35$$35$247 () Bool)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun VV$35$$35$489 () Int)
(declare-fun lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$243 () Int)
(declare-fun lq_rnm$36$x$35$$35$87 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811777$35$$35$d4Jb () Int)
(declare-fun autolen () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Str)
(declare-fun head () Int)
(declare-fun lq_tmp$36$x$35$$35$241 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$388 () Int)
(declare-fun papp2 () Int)
(declare-fun lq_rnm$36$x$35$$35$95 () Str)
(declare-fun VV$35$$35$493 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$184 () Int)
(declare-fun xs$35$$35$a4Ia () Int)
(declare-fun Round2.Index.$36$trModule () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811779$35$$35$d4Jd$35$$35$k_$35$$35$388 () Str)
(declare-fun lq_tmp$36$x$35$$35$382 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4$35$$35$k_$35$$35$345 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792811778$35$$35$d4Jc () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811772$35$$35$d4J6$35$$35$k_$35$$35$345 () Int)
(declare-fun lit$36$main () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5$35$$35$k_$35$$35$345 () Bool)
(declare-fun fromJust () Int)
(declare-fun lq_rnm$36$y$35$$35$88 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$243 () Int)
(declare-fun lq_karg$36$ds_d4IX$35$$35$k_$35$$35$345 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_rnm$36$v$35$$35$91 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811774$35$$35$d4J8$35$$35$k_$35$$35$243 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$345 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811772$35$$35$d4J6 () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5 () Bool)
(declare-fun GHC.Types.True () Bool)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792811773$35$$35$d4J7 () Str)
(declare-fun VV$35$$35$433 () Int)
(declare-fun fldList () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Str)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$VV$35$$35$246$35$$35$k_$35$$35$247 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$247 () Int)
(declare-fun lq_karg$36$VV$35$$35$242$35$$35$k_$35$$35$243 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_karg$36$VV$35$$35$404$35$$35$k_$35$$35$405 () Int)
(declare-fun x$35$$35$a4Ic () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4$35$$35$k_$35$$35$388 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5$35$$35$k_$35$$35$388 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792811784$35$$35$d4Ji () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811779$35$$35$d4Jd$35$$35$k_$35$$35$384 () Str)
(declare-fun lq_rnm$36$x$35$$35$85 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811776$35$$35$d4Ja () Int)
(declare-fun lq_tmp$36$x$35$$35$401 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$VV$35$$35$383$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$247 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_karg$36$VV$35$$35$183$35$$35$k_$35$$35$184 () Int)
(declare-fun lq_tmp$36$x$35$$35$162 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811780$35$$35$d4Je$35$$35$k_$35$$35$384 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792811781$35$$35$d4Jf () Str)
(declare-fun lit$36$Round2.Index () Str)
(declare-fun VV$35$$35$533 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811774$35$$35$d4J8$35$$35$k_$35$$35$247 () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811776$35$$35$d4Ja$35$$35$k_$35$$35$345 () Int)
(declare-fun papp1 () Int)
(declare-fun n$35$$35$a4Ib () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$388 () Int)
(declare-fun x () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811779$35$$35$d4Jd () Str)
(declare-fun tail () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$184 () Int)
(declare-fun ds_d4IY () Int)
(declare-fun lq_rnm$36$fldList$35$$35$102 () Int)
(declare-fun lq_karg$36$x$35$$35$a4Ic$35$$35$k_$35$$35$345 () Int)
(declare-fun lit$36$Prelude.$33$$33$$58$$32$negative$32$index () Str)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4$35$$35$k_$35$$35$384 () Bool)
(declare-fun lq_tmp$36$x$35$$35$343 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5$35$$35$k_$35$$35$384 () Bool)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811775$35$$35$d4J9$35$$35$k_$35$$35$345 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3$35$$35$k_$35$$35$243 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$184 () Int)
(declare-fun lq_karg$36$n$35$$35$a4Ib$35$$35$k_$35$$35$388 () Int)
(declare-fun VV$35$$35$529 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811769$35$$35$d4J3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811772$35$$35$d4J6$35$$35$k_$35$$35$243 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811771$35$$35$d4J5$35$$35$k_$35$$35$243 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792811774$35$$35$d4J8 () Str)
(declare-fun lit$36$Prelude.$33$$33$$58$$32$index$32$too$32$large () Str)
(declare-fun lq_karg$36$xs$35$$35$a4Ia$35$$35$k_$35$$35$345 () Int)
(declare-fun lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811770$35$$35$d4J4$35$$35$k_$35$$35$243 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811773$35$$35$d4J7$35$$35$k_$35$$35$243 () Str)
(declare-fun ds_d4IX () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811783$35$$35$d4Jh () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811778$35$$35$d4Jc$35$$35$k_$35$$35$345 () Int)
(declare-fun snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811775$35$$35$d4J9 () Int)
(declare-fun fst () Int)
(declare-fun y () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792811780$35$$35$d4Je$35$$35$k_$35$$35$388 () Str)
(declare-fun VV$35$$35$504 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$Prelude.$33$$33$$58$$32$index$32$too$32$large lit$36$Prelude.$33$$33$$58$$32$negative$32$index lit$36$Round2.Index lit$36$main))
(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$Round2.Index) 12))
(assert (= (strLen lit$36$Prelude.$33$$33$$58$$32$negative$32$index) 26))
(assert (= (strLen lit$36$Prelude.$33$$33$$58$$32$index$32$too$32$large) 27))
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (> len$32$xs 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (> len$32$xs 0) (= 0 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (>= len$32$xs 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (>= len$32$xs 0) (= 0 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (>= len$32$xs 0) (> len$32$xs 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (= len$32$xs 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (= len$32$xs 0) (= 0 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (= len$32$xs 0) (> len$32$xs 0)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (and (= len$32$xs 0) (>= len$32$xs 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int)) (=> true true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (=> (and (> len$32$xs 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (=> (and (>= len$32$xs 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (=> (and (>= len$32$xs 0) (> len$32$xs 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (=> (and (= len$32$xs 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$41$41$ Int) (len$32$xs Int)) (=> (and (= len$32$xs 0) (>= len$32$xs 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (not (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0) (not (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (= 0 1) (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$xs Int)) (exists ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (= 0 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> true (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int)) (=> (and (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 1)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (not (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0))) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (>= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (> lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (<= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ Int) (len$32$xs Int)) (=> (and (= lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ len$32$xs) (< lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$ 0)) (<= 0 lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Index.hs$34$$32$$40$line$32$9$44$$32$column$32$68$41$)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(exit)
