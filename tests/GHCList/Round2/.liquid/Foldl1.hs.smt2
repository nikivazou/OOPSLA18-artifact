(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun runFun () Int)
(declare-fun cast_as_int () Int)
(declare-fun ds_d4My () Int)
(declare-fun lq_karg$36$VV$35$$35$254$35$$35$k_$35$$35$255 () Int)
(declare-fun lq_karg$36$VV$35$$35$168$35$$35$k_$35$$35$169 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ () Str)
(declare-fun lq_karg$36$VV$35$$35$160$35$$35$k_$35$$35$161 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812006$35$$35$d4MS () Str)
(declare-fun lq_tmp$36$x$35$$35$434 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$164 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$159$35$$35$k_$35$$35$164 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP$35$$35$k_$35$$35$344 () Int)
(declare-fun papp5 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Le$35$$35$k_$35$$35$410 () Int)
(declare-fun xs$35$$35$a4Le () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_tmp$36$x$35$$35$167 () Int)
(declare-fun lit$36$Round2.Foldl1 () Str)
(declare-fun VV$35$$35$474 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$161 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$161 () Int)
(declare-fun lq_tmp$36$x$35$$35$151 () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$175 () Int)
(declare-fun xs$35$$35$a4Lh () Int)
(declare-fun lq_karg$36$VV$35$$35$223$35$$35$k_$35$$35$224 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$175 () Int)
(declare-fun lq_karg$36$VV$35$$35$257$35$$35$k_$35$$35$258 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ$35$$35$k_$35$$35$344 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812007$35$$35$d4MT () Int)
(declare-fun lq_tmp$36$x$35$$35$287 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP () Int)
(declare-fun lq_karg$36$VV$35$$35$249$35$$35$k_$35$$35$250 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$VV$35$$35$409$35$$35$k_$35$$35$410 () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$197$35$$35$k_$35$$35$202 () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$172 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$172 () Int)
(declare-fun lq_karg$36$x$35$$35$a4Ld$35$$35$k_$35$$35$410 () Int)
(declare-fun lq_tmp$36$x$35$$35$403 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$250 () Int)
(declare-fun lq_karg$36$ds_d4ME$35$$35$k_$35$$35$410 () Int)
(declare-fun lq_tmp$36$x$35$$35$197 () Int)
(declare-fun VV$35$$35$550 () Int)
(declare-fun autolen () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun head () Int)
(declare-fun ds_d4ME () Int)
(declare-fun lq_tmp$36$db$35$$35$1 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$224 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$255 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$156 () Int)
(declare-fun lq_tmp$36$x$35$$35$408 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$206 () Int)
(declare-fun lq_tmp$36$x$35$$35$253 () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun VV$35$$35$691 () Int)
(declare-fun lq_karg$36$VV$35$$35$205$35$$35$k_$35$$35$206 () Int)
(declare-fun lq_karg$36$ds_d4MA$35$$35$k_$35$$35$179 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$250 () Int)
(declare-fun lq_karg$36$ds_d4ME$35$$35$k_$35$$35$344 () Int)
(declare-fun lit$36$main () Str)
(declare-fun lq_tmp$36$x$35$$35$436 () Int)
(declare-fun lq_karg$36$VV$35$$35$445$35$$35$k_$35$$35$446 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR () Str)
(declare-fun lq_karg$36$VV$35$$35$171$35$$35$k_$35$$35$172 () Int)
(declare-fun lq_rnm$36$fldList$35$$35$85 () Int)
(declare-fun lq_karg$36$VV$35$$35$155$35$$35$k_$35$$35$156 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$167$35$$35$k_$35$$35$172 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$VV$35$$35$201$35$$35$k_$35$$35$202 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun VV$35$$35$584 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$202 () Int)
(declare-fun lq_tmp$36$x$35$$35$402 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$202 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$169 () Int)
(declare-fun lq_karg$36$ds_d4ME$35$$35$k_$35$$35$414 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$198$35$$35$k_$35$$35$199 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$VV$35$$35$174$35$$35$k_$35$$35$175 () Int)
(declare-fun ds_d4MA () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun z0$35$$35$a4Lg () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812008$35$$35$d4MU () Str)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun Round2.Foldl1.$36$trModule () Int)
(declare-fun lq_karg$36$VV$35$$35$178$35$$35$k_$35$$35$179 () Int)
(declare-fun lq_tmp$36$x$35$$35$289 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$175 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$169 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$202 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811999$35$$35$d4ML () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$169 () Int)
(declare-fun lq_tmp$36$x$35$$35$342 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$164 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$164 () Int)
(declare-fun lq_karg$36$VV$35$$35$163$35$$35$k_$35$$35$164 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP$35$$35$k_$35$$35$410 () Int)
(declare-fun lq_karg$36$VV$35$$35$343$35$$35$k_$35$$35$344 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_karg$36$VV$35$$35$413$35$$35$k_$35$$35$414 () Int)
(declare-fun VV$35$$35$580 () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$224 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$206 () Int)
(declare-fun lq_tmp$36$x$35$$35$288 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$255 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$156 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$206 () Int)
(declare-fun x$35$$35$a4Ld () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR$35$$35$k_$35$$35$344 () Str)
(declare-fun x () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$199 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$179 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$258 () Int)
(declare-fun lq_tmp$36$x$35$$35$272 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$199 () Int)
(declare-fun lq_tmp$36$x$35$$35$297 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Le$35$$35$k_$35$$35$414 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Str)
(declare-fun lq_tmp$36$db$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$242 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$172 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812009$35$$35$d4MV () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP$35$$35$k_$35$$35$414 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$179 () Int)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$199 () Int)
(declare-fun lq_karg$36$z0$35$$35$a4Lg$35$$35$k_$35$$35$258 () Int)
(declare-fun lq_karg$36$ds_d4My$35$$35$k_$35$$35$179 () Int)
(declare-fun lq_karg$36$x$35$$35$a4Ld$35$$35$k_$35$$35$414 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$253$35$$35$k_$35$$35$258 () Int)
(declare-fun v_B2 () Int)
(declare-fun lit$36$foldl1 () Str)
(declare-fun lq_karg$36$xs$35$$35$a4Lh$35$$35$k_$35$$35$161 () Int)
(declare-fun lq_rnm$36$x$35$$35$79 () Str)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_tmp$36$x$35$$35$248 () Int)
(declare-fun lq_karg$36$xs$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round2$47$Foldl1.hs$34$$32$$40$line$32$12$44$$32$column$32$58$41$ () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$foldl1 lit$36$main lit$36$Round2.Foldl1))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$Round2.Foldl1) 13))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$foldl1) 6))
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$5) (strLen lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ)) (<= 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$5)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$5) 0) (= VV$35$$35$F$35$$35$5 lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR) (<= 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$5)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$5) 0)) (= lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ lit$36$foldl1) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (= lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP ds_d4ME) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0)) (and (= lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR) (strLen lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ)) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR) 0)) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (= lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP ds_d4ME) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (= lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0)) (and (> (apply$35$$35$0 (as len Int) ds_d4ME) 0) (<= 0 (apply$35$$35$0 (as len Int) ds_d4ME)) (>= (apply$35$$35$0 (as len Int) ds_d4ME) 0)) (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0) (= lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP ds_d4ME) (<= 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP) 0))))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
