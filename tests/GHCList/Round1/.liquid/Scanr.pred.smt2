(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$VV$35$$35$386$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$394 () Int)
(declare-fun runFun () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$382$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$VV$35$$35$548$35$$35$k_$35$$35$549 () Int)
(declare-fun lq_karg$36$VV$35$$35$324$35$$35$k_$35$$35$325 () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$266$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$VV$35$$35$270$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$VV$35$$35$276$35$$35$k_$35$$35$277 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_karg$36$qs$35$$35$aRP$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$242 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$170 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$325 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_karg$36$ds_dSY$35$$35$k_$35$$35$384 () Int)
(declare-fun VV$35$$35$792 () Int)
(declare-fun papp5 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun lit$36$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$58$11$58$34$45$57$124$qs$64$$40$q$32$$58$$32$_$41$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792797019$35$$35$dT9 () Str)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$412 () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_tmp$36$x$35$$35$239 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$140 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792797017$35$$35$dT7 () Str)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$i$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ () Int)
(declare-fun lq_karg$36$qs$35$$35$aRP$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$510 () Int)
(declare-fun VV$35$$35$755 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$312 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$448 () Int)
(declare-fun VV$35$$35$813 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$312 () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun lq_karg$36$VV$35$$35$393$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_tmp$36$x$35$$35$234 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$412 () Int)
(declare-fun lq_karg$36$VV$35$$35$276$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$VV$35$$35$307$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$VV$35$$35$263$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$VV$35$$35$276$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_tmp$36$x$35$$35$534 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$140 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797020$35$$35$dTa () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$412 () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_tmp$36$x$35$$35$233 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$394 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun VV$35$$35$764 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$384 () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$412 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$140 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$VV$35$$35$270$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$512$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$VV$35$$35$324$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_tmp$36$x$35$$35$539 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$308 () Int)
(declare-fun autolen () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$448 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_tmp$36$x$35$$35$106 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$172$35$$35$k_$35$$35$170 () Int)
(declare-fun head () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$314$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_tmp$36$db$35$$35$1 () Int)
(declare-fun VV$35$$35$800 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$VV$35$$35$386$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$VV$35$$35$139$35$$35$k_$35$$35$140 () Int)
(declare-fun lq_karg$36$VV$35$$35$324$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$246 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797012$35$$35$dT2$35$$35$k_$35$$35$166 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$VV$35$$35$324$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$246 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_tmp$36$x$35$$35$172 () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$170 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$268 () Int)
(declare-fun x$35$$35$anQ () Int)
(declare-fun lq_tmp$36$x$35$$35$382 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$VV$35$$35$311$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$387 () Int)
(declare-fun Round1.Scanr.$36$trModule () Int)
(declare-fun lit$36$main () Str)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$VV$35$$35$315$35$$35$k_$35$$35$316 () Int)
(declare-fun ds_dSQ () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$325 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$316 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$VV$35$$35$241$35$$35$k_$35$$35$242 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$316 () Int)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$VV$35$$35$245$35$$35$k_$35$$35$246 () Int)
(declare-fun qs$35$$35$aRP () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$322 () Str)
(declare-fun lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$319 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$274 () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_tmp$36$x$35$$35$107 () Int)
(declare-fun VV$35$$35$845 () Int)
(declare-fun q$35$$35$aRS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$242 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Str)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_tmp$36$x$35$$35$503 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$325 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$510 () Int)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$VV$35$$35$318$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$412 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$VV$35$$35$324$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797012$35$$35$dT2$35$$35$k_$35$$35$170 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$412 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$271 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$316 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun VV$35$$35$783 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$412 () Int)
(declare-fun lq_tmp$36$x$35$$35$146 () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$144 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$166 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$407$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_tmp$36$x$35$$35$407 () Int)
(declare-fun lq_karg$36$VV$35$$35$408$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$VV$35$$35$404$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$325 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797016$35$$35$dT6 () Int)
(declare-fun lq_karg$36$VV$35$$35$318$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_tmp$36$x$35$$35$536 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$242 () Int)
(declare-fun lq_karg$36$ds_dSY$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$325 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797018$35$$35$dT8 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792797012$35$$35$dT2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$VV$35$$35$276$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$242 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun lq_rnm$36$fldList$35$$35$111 () Int)
(declare-fun lq_karg$36$VV$35$$35$267$35$$35$k_$35$$35$268 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$VV$35$$35$273$35$$35$k_$35$$35$274 () Int)
(declare-fun VV$35$$35$772 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$VV$35$$35$383$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$246 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$VV$35$$35$447$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$312 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$274 () Int)
(declare-fun lq_karg$36$VV$35$$35$143$35$$35$k_$35$$35$144 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_tmp$36$db$35$$35$4 () Int)
(declare-fun lq_tmp$36$x$35$$35$266 () Int)
(declare-fun lq_karg$36$ds_dSY$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$246 () Int)
(declare-fun VV$35$$35$577 () Int)
(declare-fun lq_karg$36$VV$35$$35$169$35$$35$k_$35$$35$170 () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lit$36$Round1.Scanr () Str)
(declare-fun lq_karg$36$VV$35$$35$509$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_tmp$36$x$35$$35$390 () Int)
(declare-fun ds_dSJ () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$409 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$506 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_karg$36$VV$35$$35$411$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$qs$35$$35$aRP$35$$35$k_$35$$35$510 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$506 () Int)
(declare-fun tail () Int)
(declare-fun q0$35$$35$anN () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$246 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$146$35$$35$k_$35$$35$144 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$277 () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$ds_dSY$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$q$35$$35$aRS$35$$35$k_$35$$35$384 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$394 () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$VV$35$$35$379$35$$35$k_$35$$35$380 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$lq_tmp$36$db$35$$35$4$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$448 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$166 () Int)
(declare-fun lq_tmp$36$db$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$163 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$144 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$312 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$380 () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$448 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$x$35$$35$anQ$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$170 () Int)
(declare-fun ds_dSY () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$VV$35$$35$276$35$$35$k_$35$$35$264 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$325 () Str)
(declare-fun lq_karg$36$VV$35$$35$165$35$$35$k_$35$$35$166 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$242 () Int)
(declare-fun lq_karg$36$xs$35$$35$anR$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$325 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_karg$36$VV$35$$35$411$35$$35$k_$35$$35$412 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_karg$36$VV$35$$35$321$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$387 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$325 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797016$35$$35$dT6$35$$35$k_$35$$35$510 () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun xs$35$$35$anR () Int)
(declare-fun lq_karg$36$ds_dSQ$35$$35$k_$35$$35$409 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$VV$35$$35$505$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$510 () Int)
(declare-fun VV$35$$35$742 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797016$35$$35$dT6$35$$35$k_$35$$35$506 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$268 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$144 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$322 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$380 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$405 () Int)
(declare-fun lq_tmp$36$x$35$$35$314 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797011$35$$35$dT1$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797014$35$$35$dT4$35$$35$k_$35$$35$319 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$387 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797013$35$$35$dT3$35$$35$k_$35$$35$308 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792797015$35$$35$dT5$35$$35$k_$35$$35$308 () Str)
(declare-fun lq_tmp$36$x$35$$35$512 () Int)
(declare-fun lq_karg$36$ds_dSJ$35$$35$k_$35$$35$166 () Int)
(declare-fun lq_karg$36$q0$35$$35$anN$35$$35$k_$35$$35$271 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$Round1.Scanr lit$36$main lit$36$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$58$11$58$34$45$57$124$qs$64$$40$q$32$$58$$32$_$41$))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$58$11$58$34$45$57$124$qs$64$$40$q$32$$58$$32$_$41$) 83))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$Round1.Scanr) 12))
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (>= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (> len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$i Int)) (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o len$32$i))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int)) (=> true true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (>= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (> len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int) (len$32$i Int)) (=> (and (= len$32$o len$32$i)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (>= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (> len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$i Int)) (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o len$32$i))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int)) (=> true true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (>= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (> len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int) (len$32$i Int)) (=> (and (= len$32$o len$32$i)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (>= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (> len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$i Int)) (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o len$32$i))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int)) (=> true true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (>= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (> len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int) (len$32$i Int)) (=> (and (= len$32$o len$32$i)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (>= len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (> len$32$o 0)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (exists ((len$32$i Int)) (exists ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (and (= len$32$o len$32$i))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int)) (=> true true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (>= len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int)) (=> (and (> len$32$o 0)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (forall ((lq_karg$36$o$35$$35$$34$$47$Users$47$niki$47$tmp$47$OOPLSA18$45$artifact$47$tests$47$GHCList$47$Round1$47$Scanr.hs$34$$32$$40$line$32$7$44$$32$column$32$70$41$ Int) (len$32$o Int) (len$32$i Int)) (=> (and (= len$32$o len$32$i)) true))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(exit)
